version: '3.7'

services:
  traefik:
    image: registry.docker.ir/traefik:v2.8
    command:
      - "--api.insecure=true"            # Enable the Traefik dashboard (not recommended for production)
      - "--providers.docker=true"         # Enable Docker as a provider
      - "--entrypoints.web.address=:80"   # Define entrypoint for HTTP traffic
    ports:
      - "80:80"                             # Expose HTTP port
      - "8080:8080"                         # Expose Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"  # Allow Traefik to access Docker socket
    networks:
      - web

  webapp1:
    image: registry.docker.ir/nginx
    labels:
      - "traefik.enable=true"              # Enable Traefik for this service
      - "traefik.http.routers.webapp1.rule=Host(`webapp1.local`)"  # Route based on hostname
      - "traefik.http.services.webapp1.loadbalancer.server.port=80" # Point to the correct port of the service
    volumes:
      - ./index1.html:/usr/share/nginx/html/index.html
    networks:
      - web

  webapp2:
    image: registry.docker.ir/nginx
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webapp2.rule=Host(`webapp2.local`)"
      - "traefik.http.services.webapp2.loadbalancer.server.port=80" 
    volumes:
      - ./index2.html:/usr/share/nginx/html/index.html
    networks:
      - web
  webapp3:
    image: registry.docker.ir/nginx
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webapp3.rule=Host(`webapp3.local`)"
      - "traefik.http.services.webapp3.loadbalancer.server.port=80"
    volumes:
      - ./index3.html:/usr/share/nginx/html/index.html
    networks:
      - web
  
  webapp4:
    image: registry.docker.ir/nginx
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webapp4.rule=Host(`webapp4.local`)"
      - "traefik.http.services.webapp4.loadbalancer.server.port=80"
    volumes:
      - ./index4.html:/usr/share/nginx/html/index.html
    networks:
      - web
networks:
  web:
